model EvidenceAutomationRun {
    id        String   @id @default(dbgenerated("generate_prefixed_cuid('ear'::text)")) @map("id")
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    // Relations
    evidenceAutomationId String             @map("evidence_automation_id")
    evidenceAutomation   EvidenceAutomation @relation(fields: [evidenceAutomationId], references: [id], onDelete: Cascade)

    // Run details
    status      EvidenceAutomationRunStatus @default(pending)
    startedAt   DateTime?                   @map("started_at")
    completedAt DateTime?                   @map("completed_at")

    // Results
    success Boolean? @map("success")
    error   String?  @map("error")
    logs    Json?    @map("logs")
    output  Json?    @map("output")

    // Metadata
    triggeredBy EvidenceAutomationTrigger @default(scheduled) @map("triggered_by")
    runDuration Int?                      @map("run_duration") // in milliseconds
    Task        Task?                     @relation(fields: [taskId], references: [id])
    taskId      String?

    @@index([evidenceAutomationId])
    @@index([status])
    @@index([createdAt])
    @@map("evidence_automation_runs")
}

enum EvidenceAutomationRunStatus {
    pending
    running
    completed
    failed
    cancelled

    @@map("evidence_automation_run_status")
}

enum EvidenceAutomationTrigger {
    manual
    scheduled
    api

    @@map("evidence_automation_trigger")
}
