import { Integration } from '../integrations';

export const identityIntegrations: Integration[] = [
  {
    id: 'okta',
    name: 'Okta',
    domain: 'okta.com',
    description: 'Identity and access management, SSO, MFA enforcement',
    category: 'Identity & Access',
    popular: true,
    examplePrompts: [
      'Check if MFA is enforced for all users in Okta',
      'List all Okta users without MFA enabled',
      'Verify SSO is configured for our applications',
    ],
    setupHint: 'Requires Okta API token with read permissions',
  },
  {
    id: 'azure-ad',
    name: 'Azure AD',
    domain: 'microsoft.com',
    description: 'Microsoft identity platform and conditional access',
    category: 'Identity & Access',
    popular: true,
    examplePrompts: [
      'Check conditional access policies in Azure AD',
      'List all guest users in our Azure tenant',
      'Verify all users have MFA registered',
    ],
    setupHint: 'Requires Azure AD app with Directory.Read.All',
  },
  {
    id: 'google-workspace',
    name: 'Google Workspace',
    domain: 'workspace.google.com',
    description: 'Google Workspace admin and security settings',
    category: 'Identity & Access',
    popular: true,
    examplePrompts: [
      'Check 2FA enforcement in Google Workspace',
      'List all external users with Drive access',
      'Verify admin users and permissions',
    ],
    setupHint: 'Requires service account with Admin SDK access',
  },
  {
    id: 'auth0',
    name: 'Auth0',
    domain: 'auth0.com',
    description: 'Authentication and authorization platform',
    category: 'Identity & Access',
    examplePrompts: [
      'Check Auth0 MFA policies',
      'List all applications and their authentication rules',
      'Verify password policies meet requirements',
    ],
    setupHint: 'Requires Auth0 Management API token',
  },
  {
    id: 'onelogin',
    name: 'OneLogin',
    domain: 'onelogin.com',
    description: 'Cloud-based identity and access management',
    category: 'Identity & Access',
    examplePrompts: [
      'Check OneLogin SSO configuration',
      'List users without MFA',
      'Verify role assignments',
    ],
    setupHint: 'Requires OneLogin API credentials',
  },
  {
    id: 'jumpcloud',
    name: 'JumpCloud',
    domain: 'jumpcloud.com',
    description: 'Directory-as-a-service and device management',
    category: 'Identity & Access',
    examplePrompts: [
      'Check JumpCloud user directory',
      'Verify device compliance policies',
      'List admin users and permissions',
    ],
    setupHint: 'Requires JumpCloud API key',
  },
  {
    id: 'duo',
    name: 'Duo Security',
    domain: 'duo.com',
    description: 'Two-factor authentication and access security',
    category: 'Identity & Access',
    examplePrompts: [
      'Check Duo MFA enrollment status',
      'List users without Duo registration',
      'Verify Duo authentication logs',
    ],
    setupHint: 'Requires Duo Admin API credentials',
  },
  {
    id: 'ping-identity',
    name: 'Ping Identity',
    domain: 'pingidentity.com',
    description: 'Enterprise identity and access management',
    category: 'Identity & Access',
    examplePrompts: [
      'Check Ping Identity SSO configuration',
      'List all federated applications',
      'Verify access policies',
    ],
    setupHint: 'Requires PingOne API credentials',
  },
  {
    id: 'sailpoint',
    name: 'SailPoint',
    domain: 'sailpoint.com',
    description: 'Identity governance and administration',
    category: 'Identity & Access',
    examplePrompts: [
      'Get SailPoint identity governance reports',
      'Check access certifications',
      'Verify role assignments',
    ],
    setupHint: 'Requires SailPoint IdentityIQ API access',
  },
  {
    id: 'cyberark',
    name: 'CyberArk',
    domain: 'cyberark.com',
    description: 'Privileged access management',
    category: 'Identity & Access',
    examplePrompts: [
      'Check CyberArk vault access',
      'List privileged accounts',
      'Verify session recordings',
    ],
    setupHint: 'Requires CyberArk API credentials',
  },
  {
    id: 'beyond-trust',
    name: 'BeyondTrust',
    domain: 'beyondtrust.com',
    description: 'Privileged access and identity management',
    category: 'Identity & Access',
    examplePrompts: [
      'Get BeyondTrust privileged accounts',
      'Check password rotation policies',
      'Verify session monitoring',
    ],
    setupHint: 'Requires BeyondTrust API token',
  },
  {
    id: 'thycotic',
    name: 'Delinea',
    domain: 'delinea.com',
    description: 'Privileged access management (formerly Thycotic)',
    category: 'Identity & Access',
    examplePrompts: [
      'Check Delinea secret server access',
      'List privileged account usage',
      'Verify password policies',
    ],
    setupHint: 'Requires Delinea API credentials',
  },
  {
    id: 'centrify',
    name: 'Centrify',
    domain: 'centrify.com',
    description: 'Identity and access management platform',
    category: 'Identity & Access',
    examplePrompts: [
      'Get Centrify user access',
      'Check privilege elevation policies',
      'Verify MFA configuration',
    ],
    setupHint: 'Requires Centrify API access',
  },
  {
    id: 'forgerock',
    name: 'ForgeRock',
    domain: 'forgerock.com',
    description: 'Digital identity platform',
    category: 'Identity & Access',
    examplePrompts: [
      'Check ForgeRock identity configurations',
      'List user authentication methods',
      'Verify access policies',
    ],
    setupHint: 'Requires ForgeRock API credentials',
  },
  {
    id: 'rsa-securid',
    name: 'RSA SecurID',
    domain: 'rsa.com',
    description: 'Multi-factor authentication',
    category: 'Identity & Access',
    examplePrompts: [
      'Check RSA SecurID enrollment',
      'List token assignments',
      'Verify authentication policies',
    ],
    setupHint: 'Requires RSA API access',
  },
  {
    id: 'cisco-duo',
    name: 'Cisco Duo',
    domain: 'duo.com',
    description: 'Multi-factor authentication and device trust',
    category: 'Identity & Access',
    examplePrompts: [
      'Get Duo Security enrollment status',
      'Check device trust policies',
      'Verify authentication logs',
    ],
    setupHint: 'Requires Duo Admin API',
  },
  {
    id: 'google-cloud-identity',
    name: 'Google Cloud Identity',
    domain: 'cloud.google.com',
    description: 'Cloud identity and access management',
    category: 'Identity & Access',
    examplePrompts: [
      'Check Cloud Identity user groups',
      'List device management status',
      'Verify access policies',
    ],
    setupHint: 'Requires Google Cloud Identity API access',
  },
  {
    id: 'aws-iam',
    name: 'AWS IAM',
    domain: 'aws.amazon.com',
    description: 'AWS identity and access management',
    category: 'Identity & Access',
    popular: true,
    examplePrompts: [
      'List all AWS IAM users and roles',
      'Check for IAM users without MFA',
      'Verify least privilege access policies',
    ],
    setupHint: 'Requires AWS credentials with IAM read access',
  },
  {
    id: 'aws-sso',
    name: 'AWS SSO',
    domain: 'aws.amazon.com',
    description: 'AWS Single Sign-On',
    category: 'Identity & Access',
    examplePrompts: [
      'Check AWS SSO user assignments',
      'List permission sets',
      'Verify account access',
    ],
    setupHint: 'Requires AWS SSO admin access',
  },
  {
    id: 'gcp-iam',
    name: 'GCP IAM',
    domain: 'cloud.google.com',
    description: 'Google Cloud identity and access management',
    category: 'Identity & Access',
    examplePrompts: [
      'List GCP IAM members and roles',
      'Check service account permissions',
      'Verify least privilege policies',
    ],
    setupHint: 'Requires GCP IAM API access',
  },
  {
    id: 'azure-rbac',
    name: 'Azure RBAC',
    domain: 'azure.microsoft.com',
    description: 'Azure role-based access control',
    category: 'Identity & Access',
    examplePrompts: [
      'List Azure role assignments',
      'Check custom role definitions',
      'Verify subscription access',
    ],
    setupHint: 'Requires Azure RBAC Reader role',
  },
  {
    id: 'ldap',
    name: 'LDAP',
    domain: 'openldap.org',
    description: 'Lightweight Directory Access Protocol',
    category: 'Identity & Access',
    examplePrompts: [
      'Query LDAP directory for users',
      'Check group memberships',
      'Verify organizational units',
    ],
    setupHint: 'Requires LDAP bind credentials',
  },
  {
    id: 'active-directory',
    name: 'Active Directory',
    domain: 'microsoft.com',
    description: 'Windows Active Directory services',
    category: 'Identity & Access',
    popular: true,
    examplePrompts: [
      'Get Active Directory user accounts',
      'Check group policies',
      'Verify domain controller settings',
    ],
    setupHint: 'Requires AD admin credentials',
  },
  {
    id: 'keycloak',
    name: 'Keycloak',
    domain: 'keycloak.org',
    description: 'Open source identity and access management',
    category: 'Identity & Access',
    examplePrompts: [
      'Check Keycloak realm configurations',
      'List client applications',
      'Verify authentication flows',
    ],
    setupHint: 'Requires Keycloak admin API access',
  },
  {
    id: 'gluu',
    name: 'Gluu',
    domain: 'gluu.org',
    description: 'Open source IAM platform',
    category: 'Identity & Access',
    examplePrompts: [
      'Get Gluu server configuration',
      'Check authentication methods',
      'Verify user federation',
    ],
    setupHint: 'Requires Gluu API credentials',
  },
  {
    id: 'freeipa',
    name: 'FreeIPA',
    domain: 'freeipa.org',
    description: 'Identity management for Linux/Unix',
    category: 'Identity & Access',
    examplePrompts: [
      'Query FreeIPA user directory',
      'Check host-based access control',
      'Verify sudo rules',
    ],
    setupHint: 'Requires FreeIPA admin credentials',
  },
  {
    id: 'secret-server',
    name: 'Secret Server',
    domain: 'delinea.com',
    description: 'Privileged password management',
    category: 'Identity & Access',
    examplePrompts: [
      'Get Secret Server vault status',
      'Check password rotation schedules',
      'Verify access permissions',
    ],
    setupHint: 'Requires Secret Server API token',
  },
  {
    id: 'aws-secrets-manager',
    name: 'AWS Secrets Manager',
    domain: 'aws.amazon.com',
    description: 'Secrets and credentials management',
    category: 'Identity & Access',
    examplePrompts: [
      'List all secrets in AWS Secrets Manager',
      'Check secret rotation status',
      'Verify access policies',
    ],
    setupHint: 'Requires AWS credentials with Secrets Manager access',
  },
  {
    id: 'azure-key-vault',
    name: 'Azure Key Vault',
    domain: 'azure.microsoft.com',
    description: 'Cloud secrets and key management',
    category: 'Identity & Access',
    examplePrompts: [
      'List Azure Key Vault secrets',
      'Check access policies',
      'Verify encryption keys',
    ],
    setupHint: 'Requires Azure Key Vault access',
  },
  {
    id: 'gcp-secret-manager',
    name: 'GCP Secret Manager',
    domain: 'cloud.google.com',
    description: 'Google Cloud secrets management',
    category: 'Identity & Access',
    examplePrompts: ['List GCP secrets', 'Check secret versions', 'Verify IAM access policies'],
    setupHint: 'Requires GCP Secret Manager API access',
  },
  {
    id: 'hashicorp-vault',
    name: 'HashiCorp Vault',
    domain: 'vaultproject.io',
    description: 'Secrets and encryption management',
    category: 'Identity & Access',
    popular: true,
    examplePrompts: [
      'Get Vault seal status',
      'Check secrets engine configuration',
      'Verify access policies',
    ],
    setupHint: 'Requires Vault token',
  },
  {
    id: 'twingate',
    name: 'Twingate',
    domain: 'twingate.com',
    description: 'Zero Trust network access',
    category: 'Identity & Access',
    examplePrompts: [
      'Check Twingate user access',
      'List network resources',
      'Verify access policies',
    ],
    setupHint: 'Requires Twingate API key',
  },
  {
    id: 'cloudflare-zero-trust',
    name: 'Cloudflare Zero Trust',
    domain: 'cloudflare.com',
    description: 'Zero Trust access control',
    category: 'Identity & Access',
    examplePrompts: [
      'Check Cloudflare Access policies',
      'List protected applications',
      'Verify authentication methods',
    ],
    setupHint: 'Requires Cloudflare API token',
  },
  {
    id: 'zscaler-zia',
    name: 'Zscaler',
    domain: 'zscaler.com',
    description: 'Cloud security and Zero Trust',
    category: 'Identity & Access',
    examplePrompts: [
      'Get Zscaler security policies',
      'Check user access logs',
      'Verify firewall rules',
    ],
    setupHint: 'Requires Zscaler API credentials',
  },
  {
    id: 'perimeter81',
    name: 'Perimeter 81',
    domain: 'perimeter81.com',
    description: 'Zero Trust secure network',
    category: 'Identity & Access',
    examplePrompts: [
      'Check Perimeter 81 network access',
      'List user VPN status',
      'Verify access policies',
    ],
    setupHint: 'Requires Perimeter 81 API key',
  },
  {
    id: 'pritunl',
    name: 'Pritunl',
    domain: 'pritunl.com',
    description: 'Enterprise VPN server',
    category: 'Identity & Access',
    examplePrompts: [
      'List Pritunl VPN users',
      'Check server configurations',
      'Verify access routes',
    ],
    setupHint: 'Requires Pritunl API token',
  },
  {
    id: 'openvpn',
    name: 'OpenVPN',
    domain: 'openvpn.net',
    description: 'Open source VPN solution',
    category: 'Identity & Access',
    examplePrompts: [
      'Check OpenVPN user connections',
      'List active sessions',
      'Verify server configurations',
    ],
    setupHint: 'Requires OpenVPN Access Server API',
  },
];
