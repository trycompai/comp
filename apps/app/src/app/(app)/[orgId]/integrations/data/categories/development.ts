import { Integration } from '../integrations';

export const developmentIntegrations: Integration[] = [
  {
    id: 'github',
    name: 'GitHub',
    domain: 'github.com',
    description: 'Repository security, Dependabot, branch protection',
    category: 'Development',
    popular: true,
    examplePrompts: [
      'Check if Dependabot is enabled on all repos',
      'Verify branch protection on main branches',
      'List repositories with security alerts',
    ],
    setupHint: 'Requires GitHub token or GitHub App',
  },
  {
    id: 'gitlab',
    name: 'GitLab',
    domain: 'gitlab.com',
    description: 'GitLab security scanning and code compliance',
    category: 'Development',
    popular: true,
    examplePrompts: [
      'Check SAST scanning configuration in GitLab',
      'List projects with open vulnerabilities',
      'Verify merge approval requirements',
    ],
    setupHint: 'Requires GitLab API token',
  },
  {
    id: 'bitbucket',
    name: 'Bitbucket',
    domain: 'bitbucket.org',
    description: 'Git repository hosting and collaboration',
    category: 'Development',
    examplePrompts: [
      'List all Bitbucket repositories',
      'Check branch permissions',
      'Verify required reviewers',
    ],
    setupHint: 'Requires Bitbucket app password',
  },
  {
    id: 'snyk',
    name: 'Snyk',
    domain: 'snyk.io',
    description: 'Developer security and vulnerability scanning',
    category: 'Development',
    popular: true,
    examplePrompts: [
      'Get Snyk vulnerability scan results',
      'List critical security issues',
      'Check dependency vulnerabilities',
    ],
    setupHint: 'Requires Snyk API token',
  },
  {
    id: 'sonarqube',
    name: 'SonarQube',
    domain: 'sonarqube.org',
    description: 'Code quality and security analysis',
    category: 'Development',
    examplePrompts: [
      'Get SonarQube code quality metrics',
      'List security hotspots',
      'Check code coverage',
    ],
    setupHint: 'Requires SonarQube token',
  },
  {
    id: 'jfrog',
    name: 'JFrog Artifactory',
    domain: 'jfrog.com',
    description: 'Universal artifact repository manager',
    category: 'Development',
    examplePrompts: [
      'List artifacts in JFrog',
      'Check for vulnerable dependencies',
      'Verify artifact security scanning',
    ],
    setupHint: 'Requires JFrog API key',
  },
  {
    id: 'npm',
    name: 'npm',
    domain: 'npmjs.com',
    description: 'Node package management and auditing',
    category: 'Development',
    examplePrompts: [
      'Check npm package vulnerabilities',
      'List published packages',
      'Verify package access controls',
    ],
    setupHint: 'Requires npm access token',
  },
  {
    id: 'docker-hub',
    name: 'Docker Hub',
    domain: 'docker.com',
    description: 'Container image registry',
    category: 'Development',
    examplePrompts: [
      'List Docker images',
      'Check for image vulnerabilities',
      'Verify image scanning policies',
    ],
    setupHint: 'Requires Docker Hub access token',
  },
  {
    id: 'circleci',
    name: 'CircleCI',
    domain: 'circleci.com',
    description: 'Continuous integration and delivery',
    category: 'Development',
    examplePrompts: [
      'Check CircleCI pipeline configurations',
      'List recent builds and failures',
      'Verify security contexts',
    ],
    setupHint: 'Requires CircleCI API token',
  },
  {
    id: 'jenkins',
    name: 'Jenkins',
    domain: 'jenkins.io',
    description: 'Open source automation server',
    category: 'Development',
    examplePrompts: [
      'List Jenkins jobs and status',
      'Check plugin versions',
      'Verify security configurations',
    ],
    setupHint: 'Requires Jenkins API token',
  },
  {
    id: 'travis-ci',
    name: 'Travis CI',
    domain: 'travis-ci.com',
    description: 'Continuous integration platform',
    category: 'Development',
    examplePrompts: [
      'Get Travis CI build status',
      'Check repository configurations',
      'List recent test results',
    ],
    setupHint: 'Requires Travis CI API token',
  },
  {
    id: 'pagerduty',
    name: 'PagerDuty',
    domain: 'pagerduty.com',
    description: 'Incident response and on-call management',
    category: 'Development',
    examplePrompts: [
      'Get recent PagerDuty incidents',
      'Check on-call schedules',
      'Verify escalation policies',
    ],
    setupHint: 'Requires PagerDuty API key',
  },
  {
    id: 'opsgenie',
    name: 'Opsgenie',
    domain: 'atlassian.com',
    description: 'Alert and on-call management',
    category: 'Development',
    examplePrompts: [
      'Get Opsgenie alert history',
      'Check on-call rotations',
      'Verify notification rules',
    ],
    setupHint: 'Requires Opsgenie API key',
  },
  {
    id: 'jira',
    name: 'Jira',
    domain: 'atlassian.com',
    description: 'Issue tracking and project management',
    category: 'Development',
    popular: true,
    examplePrompts: [
      'List all open security tickets in Jira',
      'Check sprint progress',
      'Verify issue workflows',
    ],
    setupHint: 'Requires Jira API token',
  },
  {
    id: 'linear',
    name: 'Linear',
    domain: 'linear.app',
    description: 'Modern issue tracking',
    category: 'Development',
    popular: true,
    examplePrompts: [
      'Get Linear issues for our team',
      'Check project status',
      'List security-related issues',
    ],
    setupHint: 'Requires Linear API key',
  },
  {
    id: 'asana',
    name: 'Asana',
    domain: 'asana.com',
    description: 'Work management platform',
    category: 'Development',
    examplePrompts: [
      'Get Asana tasks and projects',
      'Check task completion rates',
      'Verify project timelines',
    ],
    setupHint: 'Requires Asana API token',
  },
  {
    id: 'monday',
    name: 'Monday.com',
    domain: 'monday.com',
    description: 'Work operating system',
    category: 'Development',
    examplePrompts: [
      'Get Monday.com boards and items',
      'Check workflow automation',
      'Verify task assignments',
    ],
    setupHint: 'Requires Monday.com API token',
  },
  {
    id: 'clubhouse',
    name: 'Shortcut',
    domain: 'shortcut.com',
    description: 'Project management for software teams',
    category: 'Development',
    examplePrompts: [
      'List Shortcut stories and epics',
      'Check iteration progress',
      'Verify story workflows',
    ],
    setupHint: 'Requires Shortcut API token',
  },
  {
    id: 'veracode',
    name: 'Veracode',
    domain: 'veracode.com',
    description: 'Application security testing',
    category: 'Development',
    popular: true,
    examplePrompts: [
      'Get Veracode scan results',
      'Check application security flaws',
      'Verify remediation status',
    ],
    setupHint: 'Requires Veracode API credentials',
  },
  {
    id: 'checkmarx',
    name: 'Checkmarx',
    domain: 'checkmarx.com',
    description: 'Application security testing',
    category: 'Development',
    examplePrompts: [
      'Get Checkmarx SAST results',
      'Check code vulnerabilities',
      'Verify scan policies',
    ],
    setupHint: 'Requires Checkmarx API access',
  },
  {
    id: 'fortify',
    name: 'Micro Focus Fortify',
    domain: 'microfocus.com',
    description: 'Static application security testing',
    category: 'Development',
    examplePrompts: [
      'Get Fortify scan results',
      'Check security issues',
      'Verify remediation progress',
    ],
    setupHint: 'Requires Fortify API token',
  },
  {
    id: 'whitesource',
    name: 'Mend (WhiteSource)',
    domain: 'mend.io',
    description: 'Open source security and compliance',
    category: 'Development',
    examplePrompts: [
      'Get Mend vulnerability reports',
      'Check license compliance',
      'Verify dependency security',
    ],
    setupHint: 'Requires Mend API key',
  },
  {
    id: 'black-duck',
    name: 'Black Duck',
    domain: 'blackducksoftware.com',
    description: 'Open source security management',
    category: 'Development',
    examplePrompts: [
      'Get Black Duck scan results',
      'Check open source vulnerabilities',
      'Verify license compliance',
    ],
    setupHint: 'Requires Black Duck API token',
  },
  {
    id: 'coverity',
    name: 'Coverity',
    domain: 'synopsys.com',
    description: 'Static code analysis',
    category: 'Development',
    examplePrompts: [
      'Get Coverity defect data',
      'Check code quality metrics',
      'Verify scan coverage',
    ],
    setupHint: 'Requires Coverity API credentials',
  },
  {
    id: 'sonarcloud',
    name: 'SonarCloud',
    domain: 'sonarcloud.io',
    description: 'Cloud-based code quality',
    category: 'Development',
    examplePrompts: [
      'Get SonarCloud analysis results',
      'Check security hotspots',
      'Verify code coverage',
    ],
    setupHint: 'Requires SonarCloud token',
  },
  {
    id: 'codacy',
    name: 'Codacy',
    domain: 'codacy.com',
    description: 'Automated code review',
    category: 'Development',
    examplePrompts: [
      'Get Codacy code quality data',
      'Check security patterns',
      'Verify code standards',
    ],
    setupHint: 'Requires Codacy API token',
  },
  {
    id: 'codeclimate',
    name: 'Code Climate',
    domain: 'codeclimate.com',
    description: 'Code quality and test coverage',
    category: 'Development',
    examplePrompts: [
      'Get Code Climate metrics',
      'Check maintainability scores',
      'Verify test coverage',
    ],
    setupHint: 'Requires Code Climate API token',
  },
  {
    id: 'nexus',
    name: 'Sonatype Nexus',
    domain: 'sonatype.com',
    description: 'Repository manager and security',
    category: 'Development',
    examplePrompts: [
      'Get Nexus repository data',
      'Check component vulnerabilities',
      'Verify firewall policies',
    ],
    setupHint: 'Requires Nexus API credentials',
  },
  {
    id: 'octopus-deploy',
    name: 'Octopus Deploy',
    domain: 'octopus.com',
    description: 'Deployment automation',
    category: 'Development',
    examplePrompts: [
      'Get Octopus deployment history',
      'Check release status',
      'Verify environment configurations',
    ],
    setupHint: 'Requires Octopus API key',
  },
  {
    id: 'spinnaker',
    name: 'Spinnaker',
    domain: 'spinnaker.io',
    description: 'Multi-cloud continuous delivery',
    category: 'Development',
    examplePrompts: [
      'Get Spinnaker pipeline executions',
      'Check deployment status',
      'Verify application configurations',
    ],
    setupHint: 'Requires Spinnaker API access',
  },
  {
    id: 'argocd',
    name: 'Argo CD',
    domain: 'argoproj.io',
    description: 'GitOps continuous delivery',
    category: 'Development',
    examplePrompts: [
      'Get Argo CD application status',
      'Check sync state',
      'Verify deployment history',
    ],
    setupHint: 'Requires Argo CD API token',
  },
  {
    id: 'flux',
    name: 'Flux',
    domain: 'fluxcd.io',
    description: 'GitOps for Kubernetes',
    category: 'Development',
    examplePrompts: [
      'Get Flux reconciliation status',
      'Check git repository sync',
      'Verify Helm releases',
    ],
    setupHint: 'Requires Kubernetes API access',
  },
  {
    id: 'buildkite',
    name: 'Buildkite',
    domain: 'buildkite.com',
    description: 'Fast and secure CI/CD',
    category: 'Development',
    examplePrompts: [
      'Get Buildkite build status',
      'Check pipeline configurations',
      'Verify agent health',
    ],
    setupHint: 'Requires Buildkite API token',
  },
  {
    id: 'teamcity',
    name: 'TeamCity',
    domain: 'jetbrains.com',
    description: 'CI/CD server by JetBrains',
    category: 'Development',
    examplePrompts: [
      'Get TeamCity build configurations',
      'Check build history',
      'Verify agent status',
    ],
    setupHint: 'Requires TeamCity API token',
  },
  {
    id: 'bamboo',
    name: 'Bamboo',
    domain: 'atlassian.com',
    description: 'Continuous integration by Atlassian',
    category: 'Development',
    examplePrompts: ['Get Bamboo build plans', 'Check deployment projects', 'Verify build results'],
    setupHint: 'Requires Bamboo API token',
  },
  {
    id: 'azure-devops',
    name: 'Azure DevOps',
    domain: 'dev.azure.com',
    description: 'Microsoft DevOps platform',
    category: 'Development',
    popular: true,
    examplePrompts: [
      'Get Azure DevOps pipelines',
      'Check build status',
      'Verify repository policies',
    ],
    setupHint: 'Requires Azure DevOps PAT',
  },
  {
    id: 'aws-codepipeline',
    name: 'AWS CodePipeline',
    domain: 'aws.amazon.com',
    description: 'Continuous delivery service',
    category: 'Development',
    examplePrompts: [
      'Get CodePipeline execution status',
      'Check pipeline stages',
      'Verify deployment actions',
    ],
    setupHint: 'Requires AWS CodePipeline access',
  },
  {
    id: 'google-cloud-build',
    name: 'Google Cloud Build',
    domain: 'cloud.google.com',
    description: 'Serverless CI/CD platform',
    category: 'Development',
    examplePrompts: [
      'Get Cloud Build history',
      'Check build triggers',
      'Verify build configurations',
    ],
    setupHint: 'Requires GCP Cloud Build API access',
  },
  {
    id: 'harness',
    name: 'Harness',
    domain: 'harness.io',
    description: 'Continuous delivery platform',
    category: 'Development',
    examplePrompts: [
      'Get Harness deployment data',
      'Check pipeline executions',
      'Verify service configurations',
    ],
    setupHint: 'Requires Harness API key',
  },
  {
    id: 'codefresh',
    name: 'Codefresh',
    domain: 'codefresh.io',
    description: 'GitOps automation platform',
    category: 'Development',
    examplePrompts: [
      'Get Codefresh pipeline runs',
      'Check Docker image builds',
      'Verify environment deployments',
    ],
    setupHint: 'Requires Codefresh API token',
  },
  {
    id: 'drone',
    name: 'Drone CI',
    domain: 'drone.io',
    description: 'Container-native CI/CD',
    category: 'Development',
    examplePrompts: [
      'Get Drone build history',
      'Check repository activations',
      'Verify pipeline configurations',
    ],
    setupHint: 'Requires Drone API token',
  },
  {
    id: 'semaphore',
    name: 'Semaphore CI',
    domain: 'semaphoreci.com',
    description: 'Hosted CI/CD service',
    category: 'Development',
    examplePrompts: [
      'Get Semaphore workflow runs',
      'Check deployment status',
      'Verify pipeline configurations',
    ],
    setupHint: 'Requires Semaphore API token',
  },
  {
    id: 'buddy',
    name: 'Buddy',
    domain: 'buddy.works',
    description: 'Fast CI/CD automation',
    category: 'Development',
    examplePrompts: [
      'Get Buddy pipeline executions',
      'Check action status',
      'Verify deployment logs',
    ],
    setupHint: 'Requires Buddy API token',
  },
  {
    id: 'codeship',
    name: 'Codeship',
    domain: 'codeship.com',
    description: 'Continuous integration platform',
    category: 'Development',
    examplePrompts: [
      'Get Codeship build data',
      'Check deployment pipelines',
      'Verify test results',
    ],
    setupHint: 'Requires Codeship API key',
  },
];
