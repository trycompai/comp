import { Integration } from '../integrations';

export const cloudIntegrations: Integration[] = [
  {
    id: 'aws',
    name: 'AWS Security Hub',
    domain: 'aws.amazon.com',
    description: 'AWS security findings and compliance checks',
    category: 'Cloud Security',
    popular: true,
    examplePrompts: [
      'Check for critical findings in AWS Security Hub',
      'Verify all S3 buckets have encryption enabled',
      'List EC2 instances with public IPs',
    ],
    setupHint: 'Requires AWS credentials with SecurityHub access',
  },
  {
    id: 'gcp',
    name: 'GCP Security',
    domain: 'cloud.google.com',
    description: 'Google Cloud security posture monitoring',
    category: 'Cloud Security',
    popular: true,
    examplePrompts: [
      'Get GCP Security Command Center findings',
      'Verify Cloud Storage buckets are private',
      'Check IAM users with owner role',
    ],
    setupHint: 'Requires service account with Security Center access',
  },
  {
    id: 'azure',
    name: 'Azure Security',
    domain: 'azure.microsoft.com',
    description: 'Azure security center and compliance monitoring',
    category: 'Cloud Security',
    popular: true,
    examplePrompts: [
      'Get Azure Security Center recommendations',
      'Check if VMs have disk encryption',
      'List storage accounts without network restrictions',
    ],
    setupHint: 'Requires Azure Security Reader role',
  },
  {
    id: 'cloudflare',
    name: 'Cloudflare',
    domain: 'cloudflare.com',
    description: 'DNS security, DDoS protection, and firewall rules',
    category: 'Cloud Security',
    examplePrompts: [
      'Check Cloudflare firewall rules',
      'Verify SSL/TLS settings for all domains',
      'Get WAF security events',
    ],
    setupHint: 'Requires Cloudflare API token',
  },
  {
    id: 'digitalocean',
    name: 'DigitalOcean',
    domain: 'digitalocean.com',
    description: 'Cloud infrastructure and droplet management',
    category: 'Cloud Security',
    examplePrompts: [
      'List all DigitalOcean droplets',
      'Check firewall configurations',
      'Verify backup settings',
    ],
    setupHint: 'Requires DigitalOcean API token',
  },
  {
    id: 'heroku',
    name: 'Heroku',
    domain: 'heroku.com',
    description: 'Cloud platform application deployment',
    category: 'Cloud Security',
    examplePrompts: [
      'List all Heroku apps and dynos',
      'Check SSL certificate status',
      'Verify environment variables security',
    ],
    setupHint: 'Requires Heroku API key',
  },
  {
    id: 'vercel',
    name: 'Vercel',
    domain: 'vercel.com',
    description: 'Frontend cloud platform',
    category: 'Cloud Security',
    examplePrompts: [
      'List all Vercel deployments',
      'Check environment variable security',
      'Verify domain SSL settings',
    ],
    setupHint: 'Requires Vercel API token',
  },
  {
    id: 'netlify',
    name: 'Netlify',
    domain: 'netlify.com',
    description: 'Web hosting and automation platform',
    category: 'Cloud Security',
    examplePrompts: [
      'Get all Netlify sites',
      'Check deploy hooks and webhooks',
      'Verify access controls',
    ],
    setupHint: 'Requires Netlify API token',
  },
  {
    id: 'terraform-cloud',
    name: 'Terraform Cloud',
    domain: 'terraform.io',
    description: 'Infrastructure as code management',
    category: 'Cloud Security',
    examplePrompts: [
      'Check Terraform Cloud workspace configurations',
      'List recent infrastructure changes',
      'Verify state file security',
    ],
    setupHint: 'Requires Terraform Cloud API token',
  },
  {
    id: 'pulumi',
    name: 'Pulumi',
    domain: 'pulumi.com',
    description: 'Modern infrastructure as code',
    category: 'Cloud Security',
    examplePrompts: [
      'Get Pulumi stack configurations',
      'Check recent deployments',
      'Verify secret management',
    ],
    setupHint: 'Requires Pulumi access token',
  },
];

