name: Release

on:
  push:
    branches:
      - release

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: Release
    runs-on: warp-ubuntu-latest-arm64-4x
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Get version before release
        id: version_before
        run: echo "version=$(git describe --tags --abbrev=0 2>/dev/null || echo '')" >> $GITHUB_OUTPUT

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          HUSKY: 0
        run: bun run semantic-release

      - name: Get version after release
        id: version_after
        if: ${{ success() }}
        run: echo "version=$(git describe --tags --abbrev=0 2>/dev/null || echo '')" >> $GITHUB_OUTPUT

      - name: Get release notes
        id: get_notes
        if: ${{ success() && steps.version_after.outputs.version && steps.version_before.outputs.version != steps.version_after.outputs.version }}
        run: |
          NOTES=$(gh release view ${{ steps.version_after.outputs.version }} --json body -q .body | head -c 3900)
          # Escape for JSON and handle multiline
          NOTES=$(echo "$NOTES" | jq -Rs . | sed 's/^"//;s/"$//')
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          echo "$NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Send Discord notification
        if: ${{ success() && steps.version_after.outputs.version && steps.version_before.outputs.version != steps.version_after.outputs.version }}
        continue-on-error: true
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          VERSION: ${{ steps.version_after.outputs.version }}
          NOTES: ${{ steps.get_notes.outputs.notes }}
        run: |
          curl -X POST -H "Content-Type: application/json" \
            -d @- "$DISCORD_WEBHOOK" <<EOF
          {
            "embeds": [{
              "title": "New Release of Comp AI: ${VERSION}",
              "description": "${NOTES}",
              "color": 5814783
            }]
          }
          EOF
