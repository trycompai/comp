# <type>(<scope>): <subject>
#
# <body>
#
# <footer>
#
# Type must be one of the following:
# * feat: A new feature
# * fix: A bug fix
# * docs: Documentation only changes
# * style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)
# * refactor: A code change that neither fixes a bug nor adds a feature
# * perf: A code change that improves performance
# * test: Adding missing tests or correcting existing tests
# * build: Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)
# * ci: Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)
# * chore: Other changes that don't modify src or test files
# * revert: Reverts a previous commit
#
# Scope is optional and can be anything specifying the place of the commit change.
# For example: auth, api, ui, db, etc.
#
# Subject must:
# * use the imperative, present tense: "change" not "changed" nor "changes"
# * don't capitalize the first letter
# * no dot (.) at the end
#
# Body should include the motivation for the change and contrast this with previous behavior.
#
# Footer should contain any information about Breaking Changes and is also the place to
# reference GitHub issues that this commit closes.
#
# Breaking Changes should start with the word BREAKING CHANGE: with a space or two newlines.
# The rest of the commit message is then used for this.
#
# Example:
# feat(auth): add OAuth2 integration
#
# Add support for OAuth2 authentication with Google and GitHub providers.
# This allows users to sign in using their existing accounts.
#
# Closes #123
